services:
  mongoDB:
    image: mongo
    container_name: mongoDB
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - "27017:27017"
    volumes:
      - ./mongoDB:/data/db
    networks:
      - mongo-net
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    depends_on:
      - mongoDB
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${ME_CONFIG_MONGODB_ADMINUSERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${ME_CONFIG_MONGODB_ADMINPASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${ME_CONFIG_BASICAUTH_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${ME_CONFIG_BASICAUTH_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: ${ME_CONFIG_MONGODB_SERVER}
    ports:
      - "8081:8081"
    networks:
      - mongo-net
  springboot:
    build: ./springboot
    depends_on:
      - mongoDB
    ports:
      - "8080:8080"
    volumes:
      - ./springboot/src:/app/src
    working_dir: /app
    command: ["./mvnw", "spring-boot:run"]
    networks:
      - mongo-net
  front-end:
    build: kantor-frontend
    container_name: front-end
    ports:
      - "3000:3000"
    stdin_open: true
    tty: true
    depends_on:
      - springboot
    networks:
      - mongo-net
networks:
  mongo-net:
    driver: bridge